version: '3.8'

services:
  # PostgreSQL для bookings и booking states
  postgres:
    image: postgres:15-alpine
    container_name: bookings_postgres
    environment:
      POSTGRES_DB: bookings_db
      POSTGRES_USER: bookings_user
      POSTGRES_PASSWORD: bookings_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bookings_network

  # MongoDB для hotels и rooms
  mongodb:
    image: mongo:7.0
    container_name: bookings_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: bookings
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./data/init-mongo.js:/docker-entrypoint-initdb.d/init.js
    networks:
      - bookings_network

  # API сервис
  bookings.api:
    image: ${DOCKER_REGISTRY-}bookingsapi
    build:
      context: .
      dockerfile: Bookings.Api/Dockerfile
    depends_on:
      - postgres
      - mongodb
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresDatabase=Host=postgres;Database=bookings_db;Username=bookings_user;Password=bookings_password
      - ConnectionStrings__MongoDatabase=mongodb://admin:password@mongodb:27017/bookings?authSource=admin
    networks:
      - bookings_network

volumes:
  postgres_data:
  mongodb_data:

networks:
  bookings_network:
    driver: bridge
